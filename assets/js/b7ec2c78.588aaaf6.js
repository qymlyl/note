"use strict";(self.webpackChunkstudy_note=self.webpackChunkstudy_note||[]).push([[9530],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>h});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=p(t),m=a,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return t?r.createElement(h,l(l({ref:n},s),{},{components:t})):r.createElement(h,l({ref:n},s))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[d]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2881:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const o={id:"setup_eth2.0_local_testnet",title:"\u4ee5\u592a\u574a2.0\u672c\u5730\u6d4b\u8bd5\u73af\u5883\u642d\u5efa"},l=void 0,i={unversionedId:"ethereum/setup_eth2.0_local_testnet",id:"ethereum/setup_eth2.0_local_testnet",title:"\u4ee5\u592a\u574a2.0\u672c\u5730\u6d4b\u8bd5\u73af\u5883\u642d\u5efa",description:"\u53c2\u8003prysm\u5b98\u7f51\u63d0\u4f9b\u6587\u7ae0How to Set Up an Ethereum Proof-of-Stake Devnet in Minutes",source:"@site/docs/ethereum/setup_eth2.0_local_testnet.md",sourceDirName:"ethereum",slug:"/ethereum/setup_eth2.0_local_testnet",permalink:"/note/ethereum/setup_eth2.0_local_testnet",draft:!1,tags:[],version:"current",frontMatter:{id:"setup_eth2.0_local_testnet",title:"\u4ee5\u592a\u574a2.0\u672c\u5730\u6d4b\u8bd5\u73af\u5883\u642d\u5efa"},sidebar:"tutorialSidebar",previous:{title:"Hardhat\u4f7f\u7528\u6559\u7a0b",permalink:"/note/ethereum/hardhat-usage"},next:{title:"Scroll\u6574\u4f53\u67b6\u6784\u548c\u4e3b\u8981\u6d41\u7a0b",permalink:"/note/layer2/scroll_architecture"}},c={},p=[{value:"docker\u542f\u52a8local testnet",id:"docker\u542f\u52a8local-testnet",level:2},{value:"\u4e0b\u8f7d\u9879\u76ee",id:"\u4e0b\u8f7d\u9879\u76ee",level:3},{value:"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6(\u76f4\u63a5\u8fd0\u884c\u62a5\u9519)",id:"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u76f4\u63a5\u8fd0\u884c\u62a5\u9519",level:3},{value:"\u542f\u52a8",id:"\u542f\u52a8",level:3},{value:"\u67e5\u770b\u65e5\u5fd7",id:"\u67e5\u770b\u65e5\u5fd7",level:3},{value:"chinId(networkId)\u4fee\u6539",id:"chinidnetworkid\u4fee\u6539",level:3},{value:"\u5176\u4ed6\u6ce8\u610f\u70b9",id:"\u5176\u4ed6\u6ce8\u610f\u70b9",level:3}],s={toc:p},d="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"\u53c2\u8003",(0,a.kt)("a",{parentName:"p",href:"https://docs.prylabs.network/docs/getting-started"},"prysm"),"\u5b98\u7f51\u63d0\u4f9b\u6587\u7ae0",(0,a.kt)("a",{parentName:"p",href:"https://docs.prylabs.network/docs/advanced/proof-of-stake-devnet"},"How to Set Up an Ethereum Proof-of-Stake Devnet in Minutes")),(0,a.kt)("p",{parentName:"admonition"},"\u6ce8\uff1aprysm \u662f\u7528Golang \u5b9e\u73b0\u4ee5\u592a\u574a\u5171\u8bc6\u5ba2\u6237\u7aef\u3002")),(0,a.kt)("h2",{id:"docker\u542f\u52a8local-testnet"},"docker\u542f\u52a8local testnet"),(0,a.kt)("h3",{id:"\u4e0b\u8f7d\u9879\u76ee"},"\u4e0b\u8f7d\u9879\u76ee"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/Offchainlabs/eth-pos-devnet && cd eth-pos-devnet\n")),(0,a.kt)("h3",{id:"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u76f4\u63a5\u8fd0\u884c\u62a5\u9519"},"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6(\u76f4\u63a5\u8fd0\u884c\u62a5\u9519)"),(0,a.kt)("p",null,"\u6ce8\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"2024-05-24\u65f6\u76f4\u63a5\u4f7f\u7528docker compose up -d\u4f1a\u62a5\u9519"),",\u5982\u4e0b:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'INFO[0000] Specified a chain config file: config.yml     prefix=genesis\nFATA[0000] Could not generate beacon chain genesis state  error="could not set config params: version 0x05000000 for fork electra in config interop conflicts with existing config named=mainnet: configset cannot add config with conflicting fork version schedule" prefix=genesis\n')),(0,a.kt)("p",null,"\u95ee\u9898\u53ca\u89e3\u51b3\u65b9\u5f0f\u53ef\u53c2\u8003",(0,a.kt)("a",{parentName:"p",href:"https://github.com/OffchainLabs/eth-pos-devnet/pull/50"},"https://github.com/OffchainLabs/eth-pos-devnet/pull/50")),(0,a.kt)("p",null,"\u539f\u56e0\u662f\u56e0\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"consensus/config.yml"),"\u5b58\u5728\u95ee\u9898\uff0c\u914d\u7f6e\u4e2d\u7f3a\u5c11",(0,a.kt)("inlineCode",{parentName:"p"},"ELECTRA_FORK_VERSION: 0x20000094")),(0,a.kt)("p",null,"\u5b8c\u6574\u53ef\u7528\u7684\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"PRESET_BASE: interop\n\n# Genesis\nGENESIS_FORK_VERSION: 0x20000089\n\n# Altair\nALTAIR_FORK_EPOCH: 0\nALTAIR_FORK_VERSION: 0x20000090\n\n# Merge\nBELLATRIX_FORK_EPOCH: 0\nBELLATRIX_FORK_VERSION: 0x20000091\nTERMINAL_TOTAL_DIFFICULTY: 0\n\n# Capella\nCAPELLA_FORK_EPOCH: 0\nCAPELLA_FORK_VERSION: 0x20000092\nMAX_WITHDRAWALS_PER_PAYLOAD: 16\n\n# Deneb\nDENEB_FORK_VERSION: 0x20000093\n\n# Electra\nELECTRA_FORK_VERSION: 0x20000094\n\n# Time parameters\nSECONDS_PER_SLOT: 12\nSLOTS_PER_EPOCH: 6\n\n# Deposit contract\nDEPOSIT_CONTRACT_ADDRESS: 0x4242424242424242424242424242424242424242\n")),(0,a.kt)("h3",{id:"\u542f\u52a8"},"\u542f\u52a8"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker composer up -d\n")),(0,a.kt)("p",null,"\u8fd0\u884c\u6210\u529f\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"[+] Building 0.0s (0/0)                                                                         docker:desktop-linux\n[+] Running 6/6\n\u2714 Container eth-pos-devnet-geth-remove-db-1               Exited                                               0.0s\n\u2714 Container eth-pos-devnet-create-beacon-chain-genesis-1  Exited                                               0.0s\n\u2714 Container eth-pos-devnet-beacon-chain-1                 Running                                              0.0s\n\u2714 Container eth-pos-devnet-geth-genesis-1                 Exited                                               0.0s\n\u2714 Container eth-pos-devnet-validator-1                    Running                                              0.0s\n\u2714 Container eth-pos-devnet-geth-1                         Running     \n")),(0,a.kt)("h3",{id:"\u67e5\u770b\u65e5\u5fd7"},"\u67e5\u770b\u65e5\u5fd7"),(0,a.kt)("p",null,"geth\u65e5\u5fd7"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker logs eth-pos-devnet-geth-1\n")),(0,a.kt)("p",null,"\u4fe1\u6807\u94fe\u65e5\u5fd7"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker logs -f eth-pos-devnet-beacon-chain-1\n")),(0,a.kt)("p",null,"validator client\u65e5\u5fd7"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker logs -f eth-pos-devnet-validator-1\n")),(0,a.kt)("h3",{id:"chinidnetworkid\u4fee\u6539"},"chinId(networkId)\u4fee\u6539"),(0,a.kt)("p",null,"\u4fee\u6539",(0,a.kt)("inlineCode",{parentName:"p"},"genesis.json")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"vim execution/genesis.json\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'{\n    "config": {\n        "chainId": \u65b0\u7684chainId(\u6570\u5b57\u8868\u793a),\n    },\n    ...\n}\n')),(0,a.kt)("p",null,"\u4fee\u6539",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"service:\n    ...\n    beacon-chain:\n        command:\n            ...\n            - --chain-id=${CHAIN_ID:-\u65b0\u7684chainId\u4e0egenesis.json\u4e2d\u5bf9\u5e94}\n            ...\n")),(0,a.kt)("h3",{id:"\u5176\u4ed6\u6ce8\u610f\u70b9"},"\u5176\u4ed6\u6ce8\u610f\u70b9"),(0,a.kt)("p",null,"\u542f\u52a8\u65f6\u53ef\u80fd\u4f1a\u9047\u5230",(0,a.kt)("inlineCode",{parentName:"p"},"8080"),"\u7aef\u53e3\u5df2\u7ecf\u4f7f\u7528\u4e86\uff0c\u9700\u8981\u4fee\u6539",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yml"),"\uff0c\u628a\u66b4\u9732\u76848080\u7aef\u53e3\u8fdb\u884c\u4fee\u6539\uff0c\u5982",(0,a.kt)("inlineCode",{parentName:"p"},"beacon-chain"),"\u9ed8\u8ba4\u66b4\u9732\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"8080"),"\u7aef\u53e3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"service:\n    ...\n    beacon-chain:\n        ...\n        ports:\n      - 4000:4000\n      - 3500:3500\n      - 8080:8080\n      - 6060:6060\n      - 9090:9090\n        ...\n")))}u.isMDXComponent=!0}}]);